/**
 * Automatically generated by Zserio Java extension version 2.2.0.
 * Generator setup: writerCode, pubsubCode, serviceCode, sqlCode.
 */

package example.calculator;

public final class Calculator
{
    public static abstract class CalculatorService implements zserio.runtime.service.ServiceInterface
    {
        public CalculatorService()
        {
            methodMap = new java.util.HashMap<java.lang.String, Method>();
            methodMap.put("powerOfTwo",
                new Method()
                {
                    @Override
                    public byte[] invoke(byte[] requestData, java.lang.Object context)
                            throws zserio.runtime.ZserioError
                    {
                        return powerOfTwoMethod(requestData, context);
                    }
                }
            );
            methodMap.put("squareRoot",
                new Method()
                {
                    @Override
                    public byte[] invoke(byte[] requestData, java.lang.Object context)
                            throws zserio.runtime.ZserioError
                    {
                        return squareRootMethod(requestData, context);
                    }
                }
            );
        }

        @Override
        public byte[] callMethod(java.lang.String methodName, byte[] requestData, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final Method method = methodMap.get(methodName);
            if (method == null)
            {
                throw new zserio.runtime.service.ServiceException(
                        "example.calculator.Calculator: Method '" + methodName + "' does not exist!");
            }
            return method.invoke(requestData, context);
        }

        public static java.lang.String serviceFullName()
        {
            return SERVICE_FULL_NAME;
        }

        public static java.lang.String[] methodNames()
        {
            return new java.lang.String[]
            {
                "powerOfTwo",
                "squareRoot"
            };
        }

        protected abstract example.calculator.U64 powerOfTwoImpl(
                example.calculator.I32 request, java.lang.Object context);

        protected abstract example.calculator.Double squareRootImpl(
                example.calculator.Double request, java.lang.Object context);

        private byte[] powerOfTwoMethod(byte[] requestData, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final example.calculator.I32 request =
                    zserio.runtime.io.ZserioIO.read(example.calculator.I32.class, requestData);

            final example.calculator.U64 response = powerOfTwoImpl(request, context);

            final byte[] responseData = zserio.runtime.io.ZserioIO.write(response);
            return responseData;
        }

        private byte[] squareRootMethod(byte[] requestData, java.lang.Object context)
                throws zserio.runtime.ZserioError
        {
            final example.calculator.Double request =
                    zserio.runtime.io.ZserioIO.read(example.calculator.Double.class, requestData);

            final example.calculator.Double response = squareRootImpl(request, context);

            final byte[] responseData = zserio.runtime.io.ZserioIO.write(response);
            return responseData;
        }

        private interface Method
        {
            byte[] invoke(byte[] requestData, java.lang.Object context) throws zserio.runtime.ZserioError;
        }

        private static final java.lang.String SERVICE_FULL_NAME = "example.calculator.Calculator";

        private final java.util.Map<java.lang.String, Method> methodMap;
    }

    public static final class CalculatorClient
    {
        public CalculatorClient(zserio.runtime.service.ServiceInterface service)
        {
            this.service = service;
        }

        public example.calculator.U64 powerOfTwoMethod(example.calculator.I32 request,
                java.lang.Object context) throws zserio.runtime.ZserioError
        {
            final byte[] requestData = zserio.runtime.io.ZserioIO.write(request);

            final byte[] responseData = service.callMethod("powerOfTwo", requestData, context);

            final example.calculator.U64 response =
                    zserio.runtime.io.ZserioIO.read(example.calculator.U64.class, responseData);
            return response;
        }

        public example.calculator.U64 powerOfTwoMethod(example.calculator.I32 request)
                 throws zserio.runtime.ZserioError
        {
            return powerOfTwoMethod(request, null);
        }

        public example.calculator.Double squareRootMethod(example.calculator.Double request,
                java.lang.Object context) throws zserio.runtime.ZserioError
        {
            final byte[] requestData = zserio.runtime.io.ZserioIO.write(request);

            final byte[] responseData = service.callMethod("squareRoot", requestData, context);

            final example.calculator.Double response =
                    zserio.runtime.io.ZserioIO.read(example.calculator.Double.class, responseData);
            return response;
        }

        public example.calculator.Double squareRootMethod(example.calculator.Double request)
                 throws zserio.runtime.ZserioError
        {
            return squareRootMethod(request, null);
        }

        private final zserio.runtime.service.ServiceInterface service;
    }
}
